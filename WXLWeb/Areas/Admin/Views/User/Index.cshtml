
@{
    Layout = null;
    PageVModel page = ViewBag.Page;
}
@model List<WXL.Model.WXL_Users>
@using WXL.ViewModel
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>用户管理</title>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-confirm.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrapValidator.min.js"></script>
    <script src="~/Scripts/bootstrap-paginator.js"></script>
    <script src="~/Scripts/jquery-confirm.min.js"></script>

    <style type="text/css">
        .page_contain {
            text-align: center;
        }

        #example > li {
            cursor: pointer; 
        }

        body {
            padding-top: 10px;
        }
    </style>
</head>
<body>
    <div class="form-group">
        <button type="button" class="btn btn-primary btn-sm" onclick="addUserShow()">
            <span class="fa fa-plus"></span> 增加
        </button>
        <button type="button" class="btn btn-primary btn-sm" onclick="editUserShow()">
            <span class="fa fa fa-pencil"></span> 修改
        </button>
        <button type="button" class="btn btn-warning btn-sm"  onclick="updateUserState()">
            <span class="fa fa fa-remove"></span> 启/禁用
        </button>
        <button type="button" class="btn btn-success btn-sm" onclick="search()">
            <span class="fa fa-search"></span>查找
        </button>
    </div>
    <form id="searchForm" class="container-fluid">
        <div class="row">
            <div class="col-sm-4 col-xs-12">
                <label>用户名:</label>
                <input type="text" name="UserName" id="UserName" value="@ViewBag.UserName" />
            </div>
            <div class="col-sm-4 col-xs-12">
                <label>昵称:</label> 
                <input type="text" name="NickName" id="NickName" value="@ViewBag.NickName" />
            </div>
        </div>
    </form>
    <table class="table table-bordered table-responsive">
        <caption>
           
        </caption>
        <thead>
            <tr>
               <th><input type="checkbox" id="chkAll" /></th>
                <th>ID</th>
                <th>用户名</th>
                <th>昵称</th>
                <th>用户状态</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td><input type="checkbox" class="chk" value="@user.Id" /></td>
                    <td class="Id">@user.Id</td>
                    <td class="UserName">@user.UserName</td>
                    <td class="NickName">@user.NickName</td>
                    @if (user.State == "0")
                    {
                        <td><span class="label label-success">正常</span></td>
                    }
                    else
                    {
                        <td><span class="label label-warning">禁用</span></td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <div class="page_contain"> <ul id="page_ul"></ul></div>


    <!-- 模态框增加用户（Modal） -->
    <div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title" id="myModalLabel">用户增加</h4>
                </div>
                <div class="modal-body">
                    <form id="addUserForm" class="form-horizontal" role="form">
                        <div class="form-group">
                            <label for="UserName" class="col-sm-2 control-label"><span class="must">*</span>用户名</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="UserName" name="UserName" placeholder="2-16位字母,数字,下划线,点">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="NickName" class="col-sm-2 control-label">昵称</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="NickName" name="NickName" placeholder="10位以内">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="button" class="btn btn-primary" onclick="addUserSub()">提交</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
    <!-- 模态框修改用户（Modal） -->
    <div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title" id="myModalLabel">用户修改</h4>
                </div>
                <div class="modal-body">
                    <form id="editUserForm" class="form-horizontal" role="form">
                        <input type="hidden" id="editId" name="Id" />
                        <div class="form-group">
                            <label for="UserName" class="col-sm-2 control-label"><span class="must">*</span>用户名</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="editUserName" name="UserName" placeholder="2-16位字母,数字,下划线,点" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="NickName" class="col-sm-2 control-label">昵称</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="editNickName" name="NickName" placeholder="10位以内">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                    <button type="button" class="btn btn-primary" onclick="editUserSub()">提交</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</body>
</html>
<script type="text/javascript">

    var where='';//保存查询条件用于分页

    //分页导航生成
    $(function () {
        var options = {
            bootstrapMajorVersion:3, //bootstrap版本
            currentPage: @page.PageIndex,//当前页
            totalPages: @page.pageCount,//总页数
            numberofPages:@page.PageSize,//显示的页数
            itemTexts: function (type, page, current) {//设置显示的样式，默认是箭头
                switch (type) {
                    case "first":
                        return "首页";
                    case "prev":
                        return "上一页";
                    case "next":
                        return "下一页";
                    case "last":
                        return "末页";
                    case "page":
                        return page;
                }
            },
            //点击事件
            onPageClicked: function (event, originalEvent, type, page) {
                location.href = "/Admin/User/Index?PageIndex=" + page+where;
            }
        }
        $('#page_ul').bootstrapPaginator(options);
        searchParm();//记录上次查询的参数
    })

    //增加用户弹出框
    function addUserShow()
    {
        $('#addUserModal').modal({
            keyboard: true
        })
    }
    //增加用户提交
    function addUserSub(){
        var form=$('#addUserForm');
        //增加校验规则
        formValidator(form);
        //检验输入是否合法
        var bootstrapValidator = $('#addUserForm').data('bootstrapValidator');
        //手动触发验证
        bootstrapValidator.validate();
        if (bootstrapValidator.isValid()) {
            //表单序列化
            var data = $('#addUserForm').serializeArray();
            //表单提交
            $.post('/Admin/User/AddUser', data, function (d) {
                if (!!d) {
                    if (d.Code == "0")
                    {
                        //增加成功，刷新页面
                        location.reload();
                    }
                    else {
                        //弹出错误提示
                        $.confirm({
                            title:'提示',
                            content:d.Msg,
                            type:'red',
                            typeAnimate:true,
                            buttons:{
                                tryAgain:{
                                    text:'确定',
                                    btnClass:'btn-red'
                                }
                            }
                        })
                       
                    }
                }
            })
        }
    }   
    //增加用户表单校验
    function formValidator(form){
        form.bootstrapValidator({
            message: '输入的值没通过验证',
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                UserName: {
                    message: '用户名验证失败',
                    validators: {
                        notEmpty: {
                            message: '用户名不能为空'
                        },
                        stringLength: {
                            min: 2,
                            max: 16,
                            message: '用户名长度必须在2到16位之间'
                        },
                        regexp: {
                            regexp: /^[a-zA-Z0-9_.]+$/,
                            message: '用户名只能包含大写、小写、数字、下划线和点'
                        }
                    }
                },              
                NickName:{
                    validators: {
                        stringLength: {
                            max: 10,
                            message: '昵称长度不超过10位'
                        }
                    }
                }
            }
        });
    }
    //修改用户弹出框
    function editUserShow(){
        //判断是否勾选有用户
        var chks=  $(".chk:checked").length ;
        if(chks<=0||chks>1)
        {
            //弹出错误提示
            $.confirm({
                title:'提示',
                content:'请选择一个用户',
                type:'orange',
                typeAnimate:true,
                buttons:{
                    ok:{
                        text:'确定',
                        btnClass:'btn-orange'
                    }
                }
            })
            return;
        }
        //获取点击行的值
        var selRow=  $(".chk:checked").parent().parent();
        var Id=selRow.find(".Id").text();
        var userName=selRow.find(".UserName").text();
        var nickName=selRow.find(".NickName").text();
        //把值插入到修改显示
        $("#editId").val(Id);
        $("#editUserName").val(userName);
        $("#editNickName").val(nickName)

        $('#editUserModal').modal({
            keyboard: true
        })
    }
    //修改用户提交
    function editUserSub(){
        //修改框检验规则
        editValidator();
        //检验输入是否合法
        var bootstrapValidator = $('#editUserModal').data('bootstrapValidator');
        //手动触发验证
        bootstrapValidator.validate();
        if (bootstrapValidator.isValid()) {
            //表单序列化
            var data = $('#editUserForm').serializeArray();
            $.post('/Admin/User/UpdateUser', data, function (d) {
                if (!!d) {
                    if (d.Code == "0")
                    {
                        //修改成功，刷新页面
                        location.reload();
                    }
                    else {
                        //弹出错误提示
                        $.confirm({
                            title:'提示',
                            content:d.Msg,
                            type:'red',
                            typeAnimate:true,
                            buttons:{
                                tryAgain:{
                                    text:'确定',
                                    btnClass:'btn-red'
                                }
                            }
                        })
                       
                    }
                }
            })
        }
    }
    //修改用户表单检验
    function editValidator(){
        $("#editUserModal").bootstrapValidator({
            message: '输入的值没通过验证',
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields:{
                NickName:{
                    validators: {
                        stringLength: {
                            max: 10,
                            message: '昵称长度不超过10位'
                        }
                    }
                }
            }
        })
    }
    //查询参数
    function searchParm(){
        where='';
        var userName=$("#UserName").val();
        var nickName=$("#NickName").val();
        if(!!userName)
        {
            where+="&UserName="+userName;          
        }
        if(!!nickName){
         where+="&NickName="+nickName;          
        }
    }
    //查询
    function search(){      
        $("#searchForm").submit();
    }
    //chkAll选中，全部chk选中  ,chkAll取消选中,全部chk取消选中 
    $("#chkAll").click(function () {
        $(".chk").prop("checked", $(this).prop("checked"))
    })
    //chk全部选中时，“全选选中”
    $(".chk").click(function () {
        var flag = true;
        var chk = $(".chk")
        for (var i = 0; i < chk.length; i++) {
            if ($(chk[i]).is(':checked') === false) {
                flag = false
                break
            }
        }
        if (flag === true)
            $("#chkAll").prop("checked", true)
        else
            $("#chkAll").prop("checked", false)
    })
    //启/禁用
    function updateUserState(){
        var items = ''
        $(".chk").each(function() {
            if ($(this).is(':checked') == true) {
                items += $(this).val() + ","
            }
        })
        if(items===''){
            //弹出错误提示
            $.confirm({
                title:'提示',
                content:'请选择最少一个用户',
                type:'orange',
                typeAnimate:true,
                buttons:{
                    ok:{
                        text:'确定',
                        btnClass:'btn-orange'
                    }
                }
            })
            return;
        }
        //去除最后一个逗号
        items = items.substring(0, items.length - 1);
        $.post('/Admin/User/UpdateUserState',{ids:items},function(data){
            if(!!data)
            {
                if(data.Code=="0")
                {
                    //弹出提示
                    $.confirm({
                        title:'提示',
                        content:data.Msg,
                        type:'green',
                        typeAnimate:true,
                        buttons:{
                            ok:{
                                text:'确定',
                                btnClass:'btn-green',
                                action: function(){
                                    //刷新页面
                                    window.location.reload();
                                }
                            }
                        }
                    })
                }
                else {
                    //弹出提示
                    $.confirm({
                        title:'提示',
                        content:data.Msg,
                        type:'red',
                        typeAnimate:true,
                        buttons:{
                            ok:{
                                text:'确定',
                                btnClass:'btn-red'
                            }
                        }
                    })
                }
            }
        })
    }
</script>
